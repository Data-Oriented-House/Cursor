"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[339],{77523:e=>{e.exports=JSON.parse('{"functions":[{"name":"tobuffer","desc":"Returns a new buffer with all bytes from buf between [0, pos).","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"buffer\\r\\n"}],"function_type":"static","source":{"line":23,"path":"src/init.luau"}},{"name":"pushu1","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":32,"path":"src/init.luau"}},{"name":"popu1","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":42,"path":"src/init.luau"}},{"name":"pushu2","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":50,"path":"src/init.luau"}},{"name":"popu2","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":60,"path":"src/init.luau"}},{"name":"pushu3","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":68,"path":"src/init.luau"}},{"name":"popu3","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":79,"path":"src/init.luau"}},{"name":"pushu4","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":89,"path":"src/init.luau"}},{"name":"popu4","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":99,"path":"src/init.luau"}},{"name":"pushu5","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":107,"path":"src/init.luau"}},{"name":"popu5","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":118,"path":"src/init.luau"}},{"name":"pushu6","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":128,"path":"src/init.luau"}},{"name":"popu6","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":139,"path":"src/init.luau"}},{"name":"pushu7","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":149,"path":"src/init.luau"}},{"name":"popu7","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":161,"path":"src/init.luau"}},{"name":"pushu8","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":172,"path":"src/init.luau"}},{"name":"popu8","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":183,"path":"src/init.luau"}},{"name":"pushi1","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":193,"path":"src/init.luau"}},{"name":"popi1","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":203,"path":"src/init.luau"}},{"name":"pushi2","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":211,"path":"src/init.luau"}},{"name":"popi2","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":221,"path":"src/init.luau"}},{"name":"pushi3","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":229,"path":"src/init.luau"}},{"name":"popi3","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":242,"path":"src/init.luau"}},{"name":"pushi4","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":252,"path":"src/init.luau"}},{"name":"popi4","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":262,"path":"src/init.luau"}},{"name":"pushi5","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":270,"path":"src/init.luau"}},{"name":"popi5","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":283,"path":"src/init.luau"}},{"name":"pushi6","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":293,"path":"src/init.luau"}},{"name":"popi6","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":306,"path":"src/init.luau"}},{"name":"pushi7","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":316,"path":"src/init.luau"}},{"name":"popi7","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":330,"path":"src/init.luau"}},{"name":"pushi8","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":341,"path":"src/init.luau"}},{"name":"popi8","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":354,"path":"src/init.luau"}},{"name":"pushf4","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":364,"path":"src/init.luau"}},{"name":"popf4","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":374,"path":"src/init.luau"}},{"name":"pushf8","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor   \\r\\n"}],"function_type":"static","source":{"line":382,"path":"src/init.luau"}},{"name":"popf8","desc":"","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":392,"path":"src/init.luau"}},{"name":"pushbool","desc":"Packs up to 8 booleans in a single byte to make bitpacking and bitmasking trivial.","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"a","desc":"","lua_type":"boolean"},{"name":"b","desc":"","lua_type":"boolean?"},{"name":"c","desc":"","lua_type":"boolean?"},{"name":"d","desc":"","lua_type":"boolean?"},{"name":"e","desc":"","lua_type":"boolean?"},{"name":"f","desc":"","lua_type":"boolean?"},{"name":"g","desc":"","lua_type":"boolean?"},{"name":"h","desc":"","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"Cursor\\r\\n"}],"function_type":"static","source":{"line":401,"path":"src/init.luau"}},{"name":"popbool","desc":"Pops a byte and unpacks the 8 bits as booleans.","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"boolean"},{"desc":"","lua_type":"boolean"}],"function_type":"static","source":{"line":419,"path":"src/init.luau"}},{"name":"pushvlq","desc":"A V.L.Q. is a [Variable-Length-Quantity](https://en.wikipedia.org/wiki/Variable-length_quantity). Because this is pushed onto the stack, the bytes are ordered in reverse and the finished flag is on the \\"first\\" byte.","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Cursor\\r\\n"}],"function_type":"static","source":{"line":436,"path":"src/init.luau"}},{"name":"popvlq","desc":"A V.L.Q. is a [Variable-Length-Quantity](https://en.wikipedia.org/wiki/Variable-length_quantity). Because this is pushed onto the stack, the bytes are ordered in reverse and the finished flag is on the \\"first\\" byte. This is how the pop function can read the bytes in sequence from the head to know when to stop.","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"number\\r\\n"}],"function_type":"static","source":{"line":471,"path":"src/init.luau"}},{"name":"pushstr","desc":"Pushes the entire string byte-per-character, then pushes a [V.L.Q.](https://en.wikipedia.org/wiki/Variable-length_quantity) after so `popstr` knows how many characters to pop.","params":[{"name":"cursor","desc":"","lua_type":"Cursor"},{"name":"x","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"Cursor\\r\\n"}],"function_type":"static","source":{"line":527,"path":"src/init.luau"}},{"name":"popstr","desc":"Pops off the [V.L.Q.](https://en.wikipedia.org/wiki/Variable-length_quantity) representing the length to then pop off and return all characters.","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"string\\r\\n"}],"function_type":"static","source":{"line":540,"path":"src/init.luau"}},{"name":"printcursor","desc":"Pretty prints a cursor.","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[],"function_type":"static","source":{"line":550,"path":"src/init.luau"}},{"name":"tobuffit","desc":"Map a Cursor into a [Buffit Cursor](https://github.com/red-blox/Util/blob/main/libs/Buffit/Buffit.luau) type.","params":[{"name":"cursor","desc":"","lua_type":"Cursor"}],"returns":[{"desc":"","lua_type":"Buffit\\r\\n"}],"function_type":"static","source":{"line":587,"path":"src/init.luau"}},{"name":"new","desc":"Create a new Cursor object with an optional size and optional position. A Cursor object acts like a dynamic stack you can push and pop from, serialzing data into and out of a buffer. If the Cursor\'s buffer runs out of space, it will allocate a new buffer with 1.5x the size and copy the contents to that buffer. This means Cursors\' buffer sizes only automatically grow, never shrink.\\n   \\n```lua\\n-- Defaulting to size = 8, position = 0\\nlocal cursor = Cursor.new()\\nCursor.pushu1(cursor, 8)\\ncursor:pushvlq(659386590836579356)\\n\\n-- Setting size and position\\nlocal premadeCursor = Cursor.new(100, 50)\\nprint(premadeCursor:popf8())\\n```","params":[{"name":"size","desc":"How many bytes to initialize the buffer with.","lua_type":"number? = 8"},{"name":"position","desc":"What byte to set the position to.","lua_type":"number? = 0"}],"returns":[{"desc":"","lua_type":"Cursor\\r\\n"}],"function_type":"static","source":{"line":667,"path":"src/init.luau"}},{"name":"frombuffer","desc":"Create a new Cursor object from a buffer stored by reference. Sets the buf field to the buffer and the pos field to the position parameter.\\n```lua\\nlocal cursor = Cursor.frombuffer(buffer.fromstring \'Hello World!\')\\nCursor.pushu1(cursor, 8)\\ncursor:pushvlq(659386590836579356)\\n```\\nHere\'s an example using Roblox\'s RemoteEvent api to send data over the network.\\n```lua\\n-- Server Example\\nlocal buf = Cursor.new()\\n\\t:pushu3(792)\\n\\t:pushf4(74958.38373)\\n\\t:pushstr(\\"Systems Online!\\")\\n\\t:tobuffer()\\nRemote:FireAllClients(buf)\\n\\n-- Client Example\\nRemote.OnClientEvent:Connect(function(data: buffer)\\n\\tlocal cursor = Cursor.frombuffer(data)\\n\\tprint(Cursor.popstr(cursor))\\n\\tprint(cursor:popf4(), cursor:popu3())\\nend)\\n```","params":[{"name":"buf","desc":"","lua_type":"The buffer to initialize with"},{"name":"position","desc":"","lua_type":"`= buffer.len(buf)` What byte to set the position to."}],"returns":[{"desc":"","lua_type":"Cursor\\r\\n"}],"function_type":"static","source":{"line":703,"path":"src/init.luau"}}],"properties":[],"types":[{"name":"Buffit","desc":"","fields":[{"name":"Buf","lua_type":"buffer","desc":""},{"name":"Pos","lua_type":"number","desc":""}],"source":{"line":578,"path":"src/init.luau"}},{"name":"Cursor","desc":"A cousin of the [Redblox Buffit Cursor](https://github.com/red-blox/Util/blob/main/libs/Buffit/Buffit.luau) type. Has a metatable to allow for syntax sugar.","fields":[{"name":"buf","lua_type":"buffer","desc":""},{"name":"pos","lua_type":"number","desc":""}],"source":{"line":717,"path":"src/init.luau"}}],"name":"Cursor","desc":"The root namespace to access the procedural api and create Cursor objects.","source":{"line":7,"path":"src/init.luau"}}')}}]);